use crate::cheb::ChebSeries;
use crate::poly::Polynomial;
use lazy_static::lazy_static;

// based on SLATEC besj0, 1977 version, w. fullerton
// Chebyshev expansions for Bessel functions
// series for bj0 on the interval 0.0 to 16.0
// with:
// - weighted error: 7.47e-18
// - log weighted error: 17.13
// - significant figures required: 16.98
// - decimal places required: 17.68
pub(super) const BJ0_DATA: [f64; 13] = [
    0.100_254_161_968_939_13,
    -0.665_223_007_764_405_1,
    0.248_983_703_498_281_3,
    -0.033_252_723_170_035_77,
    0.002_311_417_930_469_401_7,
    -0.000_099_112_774_199_508_0,
    0.000_002_891_670_864_399_8,
    -0.000_000_061_210_858_663_0,
    0.000_000_000_983_865_079_3,
    -0.000_000_000_012_423_551_5,
    0.000_000_000_000_126_543_3,
    -0.000_000_000_000_001_061_9,
    0.000_000_000_000_000_007_4,
];

// based on SLATEC besj1, 1977 version, w. fullerton
// Chebyshev expansions for Bessel functions
// series for bj0 on the interval 0.0 to 16.0
// with:
// - weighted error: 4.48e-17
// - log weighted error: 16.35
// - significant figures required: 15.77
// - decimal places required: 16.89
pub(super) const BJ1_DATA: [f64; 12] = [
    -0.117_261_415_133_327_87,
    -0.253_615_218_307_906_4,
    0.050_127_080_984_469_566,
    -0.004_631_514_809_625_081,
    0.000_247_996_229_415_914,
    -0.000_008_678_948_686_278,
    0.000_000_214_293_917_143,
    -0.000_000_003_936_093_079,
    0.000_000_000_055_911_823,
    -0.000_000_000_000_632_761,
    0.000_000_000_000_005_840,
    -0.000_000_000_000_000_044,
];

// chebyshev expansions for amplitude and phase
// functions used in bessel evaluations
// These are the same for J0,Y0 and for J1,Y1, so
// they sit outside those functions.

pub(super) const BM0_DATA: [f64; 21] = [
    0.092_849_616_373_816_45,
    -0.001_429_877_074_034_84,
    0.000_028_305_792_712_57,
    -0.000_001_433_006_114_24,
    0.000_000_120_286_280_46,
    -0.000_000_013_971_130_13,
    0.000_000_002_040_761_88,
    -0.000_000_000_353_996_69,
    0.000_000_000_070_247_59,
    -0.000_000_000_015_541_07,
    0.000_000_000_003_762_26,
    -0.000_000_000_000_982_82,
    0.000_000_000_000_274_08,
    -0.000_000_000_000_080_91,
    0.000_000_000_000_025_11,
    -0.000_000_000_000_008_14,
    0.000_000_000_000_002_75,
    -0.000_000_000_000_000_96,
    0.000_000_000_000_000_34,
    -0.000_000_000_000_000_12,
    0.000_000_000_000_000_04,
];

pub(super) const BTH0_DATA: [f64; 24] = [
    -0.246_391_637_743_001_19,
    0.001_737_098_307_508_963,
    -0.000_062_183_633_402_968,
    0.000_004_368_050_165_742,
    -0.000_000_456_093_019_869,
    0.000_000_062_197_400_101,
    -0.000_000_010_300_442_889,
    0.000_000_001_979_526_776,
    -0.000_000_000_428_198_396,
    0.000_000_000_102_035_840,
    -0.000_000_000_026_363_898,
    0.000_000_000_007_297_935,
    -0.000_000_000_002_144_188,
    0.000_000_000_000_663_693,
    -0.000_000_000_000_215_126,
    0.000_000_000_000_072_659,
    -0.000_000_000_000_025_465,
    0.000_000_000_000_009_229,
    -0.000_000_000_000_003_448,
    0.000_000_000_000_001_325,
    -0.000_000_000_000_000_522,
    0.000_000_000_000_000_210,
    -0.000_000_000_000_000_087,
    0.000_000_000_000_000_036,
];

pub(super) const BM1_DATA: [f64; 21] = [
    0.104_736_251_093_128_5,
    0.004_424_438_937_023_45,
    -0.000_056_616_395_040_35,
    0.000_002_313_494_173_39,
    -0.000_000_173_771_820_07,
    0.000_000_018_932_099_30,
    -0.000_000_002_654_160_23,
    0.000_000_000_447_402_09,
    -0.000_000_000_086_917_95,
    0.000_000_000_018_914_92,
    -0.000_000_000_004_518_84,
    0.000_000_000_001_167_65,
    -0.000_000_000_000_322_65,
    0.000_000_000_000_094_50,
    -0.000_000_000_000_029_13,
    0.000_000_000_000_009_39,
    -0.000_000_000_000_003_15,
    0.000_000_000_000_001_09,
    -0.000_000_000_000_000_39,
    0.000_000_000_000_000_14,
    -0.000_000_000_000_000_05,
];

pub(super) const BTH1_DATA: [f64; 24] = [
    0.740_601_410_263_138_5,
    -0.004_571_755_659_637_69,
    0.000_119_818_510_964_326,
    -0.000_006_964_561_891_648,
    0.000_000_655_495_621_447,
    -0.000_000_084_066_228_945,
    0.000_000_013_376_886_564,
    -0.000_000_002_499_565_654,
    0.000_000_000_529_495_100,
    -0.000_000_000_124_135_944,
    0.000_000_000_031_656_485,
    -0.000_000_000_008_668_640,
    0.000_000_000_002_523_758,
    -0.000_000_000_000_775_085,
    0.000_000_000_000_249_527,
    -0.000_000_000_000_083_773,
    0.000_000_000_000_029_205,
    -0.000_000_000_000_010_534,
    0.000_000_000_000_003_919,
    -0.000_000_000_000_001_500,
    0.000_000_000_000_000_589,
    -0.000_000_000_000_000_237,
    0.000_000_000_000_000_097,
    -0.000_000_000_000_000_040,
];

/* chebyshev expansions for amplitude and phase
   functions used in bessel evaluations

   These are the same for J0,Y0 and for J1,Y1, so
   they sit outside those functions.
*/

lazy_static! {
    // based on SLATEC besy0, 1980 version, w. fullerton */
    // chebyshev expansions
    // series for by0 on the interval  0. ->  1.60000d+01
    //      with weighted error:         1.20e-17
    //      log weighted error:             16.92
    //      significant figures required:   16.15
    //      decimal places required:        17.48
    //
    pub(super) static ref BY0_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            -0.011_277_839_392_865_573,
            -0.128_345_237_560_420_35,
            -0.104_378_847_997_942_49,
            0.023_662_749_183_969_694,
            -0.002_090_391_647_700_486,
            0.000_103_975_453_939_057,
            -0.000_003_369_747_162_423,
            0.000_000_077_293_842_676,
            -0.000_000_001_324_976_772,
            0.000_000_000_017_648_232,
            -0.000_000_000_000_188_105,
            0.000_000_000_000_001_641,
            -0.000_000_000_000_000_011,
        ],
        a: -1.0,
        b: 1.0,
    };
    pub(super) static ref BY1_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            0.032_080_471_006_119_084,
            1.262_707_897_433_500_4,
            0.006_499_961_899_923_175,
            -0.089_361_645_288_605_05,
            0.013_250_881_221_757_096,
            -0.000_897_905_911_964_835_2,
            0.000_036_473_614_879_583_06,
            -0.000_001_001_374_381_666_00,
            0.000_000_019_945_396_573_90,
            -0.000_000_000_302_306_560_18,
            0.000_000_000_003_609_878_15,
            -0.000_000_000_000_034_874_88,
            0.000_000_000_000_000_278_38,
            -0.000_000_000_000_000_001_86,
        ],
        a: -1.0,
        b: 1.0,
    };
    pub(super) static ref BESSEL_AMP_PHASE_BM0_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            0.092_849_616_373_816_45,
            -0.001_429_877_074_034_84,
            0.000_028_305_792_712_57,
            -0.000_001_433_006_114_24,
            0.000_000_120_286_280_46,
            -0.000_000_013_971_130_13,
            0.000_000_002_040_761_88,
            -0.000_000_000_353_996_69,
            0.000_000_000_070_247_59,
            -0.000_000_000_015_541_07,
            0.000_000_000_003_762_26,
            -0.000_000_000_000_982_82,
            0.000_000_000_000_274_08,
            -0.000_000_000_000_080_91,
            0.000_000_000_000_025_11,
            -0.000_000_000_000_008_14,
            0.000_000_000_000_002_75,
            -0.000_000_000_000_000_96,
            0.000_000_000_000_000_34,
            -0.000_000_000_000_000_12,
            0.000_000_000_000_000_04,
        ],
        a: -1.0,
        b: 1.0,
    };
    pub(super) static ref BESSEL_AMP_PHASE_BTH0_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            -0.246_391_637_743_001_19,
            0.001_737_098_307_508_963,
            -0.000_062_183_633_402_968,
            0.000_004_368_050_165_742,
            -0.000_000_456_093_019_869,
            0.000_000_062_197_400_101,
            -0.000_000_010_300_442_889,
            0.000_000_001_979_526_776,
            -0.000_000_000_428_198_396,
            0.000_000_000_102_035_840,
            -0.000_000_000_026_363_898,
            0.000_000_000_007_297_935,
            -0.000_000_000_002_144_188,
            0.000_000_000_000_663_693,
            -0.000_000_000_000_215_126,
            0.000_000_000_000_072_659,
            -0.000_000_000_000_025_465,
            0.000_000_000_000_009_229,
            -0.000_000_000_000_003_448,
            0.000_000_000_000_001_325,
            -0.000_000_000_000_000_522,
            0.000_000_000_000_000_210,
            -0.000_000_000_000_000_087,
            0.000_000_000_000_000_036,
        ],
        a: -1.0,
        b: 1.0,
    };
    pub(super) static ref BESSEL_AMP_PHASE_BM1_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            0.104_736_251_093_128_5,
            0.004_424_438_937_023_45,
            -0.000_056_616_395_040_35,
            0.000_002_313_494_173_39,
            -0.000_000_173_771_820_07,
            0.000_000_018_932_099_30,
            -0.000_000_002_654_160_23,
            0.000_000_000_447_402_09,
            -0.000_000_000_086_917_95,
            0.000_000_000_018_914_92,
            -0.000_000_000_004_518_84,
            0.000_000_000_001_167_65,
            -0.000_000_000_000_322_65,
            0.000_000_000_000_094_50,
            -0.000_000_000_000_029_13,
            0.000_000_000_000_009_39,
            -0.000_000_000_000_003_15,
            0.000_000_000_000_001_09,
            -0.000_000_000_000_000_39,
            0.000_000_000_000_000_14,
            -0.000_000_000_000_000_05,
        ],
        a: -1.0,
        b: 1.0,
    };
    pub(super) static ref BESSEL_AMP_PHASE_BTH1_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            0.740_601_410_263_138_5,
            -0.004_571_755_659_637_69,
            0.000_119_818_510_964_326,
            -0.000_006_964_561_891_648,
            0.000_000_655_495_621_447,
            -0.000_000_084_066_228_945,
            0.000_000_013_376_886_564,
            -0.000_000_002_499_565_654,
            0.000_000_000_529_495_100,
            -0.000_000_000_124_135_944,
            0.000_000_000_031_656_485,
            -0.000_000_000_008_668_640,
            0.000_000_000_002_523_758,
            -0.000_000_000_000_775_085,
            0.000_000_000_000_249_527,
            -0.000_000_000_000_083_773,
            0.000_000_000_000_029_205,
            -0.000_000_000_000_010_534,
            0.000_000_000_000_003_919,
            -0.000_000_000_000_001_500,
            0.000_000_000_000_000_589,
            -0.000_000_000_000_000_237,
            0.000_000_000_000_000_097,
            -0.000_000_000_000_000_040,
        ],
        a: -1.0,
        b: 1.0,
    };

    // Minimax rational approximation for [0, 1), peak relative error = 2.04 * GSL_DBL_EPSILON.
    // Source: http://www.advanpix.com/?p=3812
    pub(super) static ref K0_POLY: Polynomial<f64> = Polynomial {
        coeffs: vec![
            1.1593151565841244842077226e-01,
            2.7898287891460317300886539e-01,
            2.5248929932161220559969776e-02,
            8.4603509072136578707676406e-04,
            1.4914719243067801775856150e-05,
            1.6271068931224552553548933e-07,
            1.2082660336282566759313543e-09,
            6.6117104672254184399933971e-12,
        ],
    };
    pub(super) static ref I0_POLY: Polynomial<f64> = Polynomial {
        coeffs: vec![
            1.0000000000000000044974165e+00,
            2.4999999999999822316775454e-01,
            2.7777777777892149148858521e-02,
            1.7361111083544590676709592e-03,
            6.9444476047072424198677755e-05,
            1.9288265756466775034067979e-06,
            3.9908220583262192851839992e-08,
        ],
    };

    // Chebyshev expansion for [1,8], peak relative error = 1.28*GSL_DBL_EPSILON.
    // Source: Pavel Holoborodko.
    pub(super) static ref AK0_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            -3.28737867094650101e-02,
            -4.49369057710236880e-02,
            2.98149992004308095e-03,
            -3.03693649396187920e-04,
            3.91085569307646836e-05,
            -5.86872422399215952e-06,
            9.82873709937322009e-07,
            -1.78978645055651171e-07,
            3.48332306845240957e-08,
            -7.15909210462546599e-09,
            1.54019930048919494e-09,
            -3.44555485579194210e-10,
            7.97356101783753023e-11,
            -1.90090968913069735e-11,
            4.65295609304114621e-12,
            -1.16614287433470780e-12,
            2.98554375218596891e-13,
            -7.79276979512292169e-14,
            2.07027467168948402e-14,
            -5.58987860393825313e-15,
            1.53202965950646914e-15,
            -4.25737536712188186e-16,
            1.19840238501357389e-16,
            -3.41407346762502397e-17
        ],
        a: -1.0,
        b: 1.0,
    };


    // Chebyshev expansion for [8,inf), peak relative error = 1.25*GSL_DBL_EPSILON.
    // Source: SLATEC/dbsk0e.f
    pub(super) static ref AK02_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            -0.1201869826307592240E-1,
            -0.9174852691025695311E-2,
            0.1444550931775005821E-3,
            -0.4013614175435709729E-5,
            0.1567831810852310673E-6,
            -0.7770110438521737710E-8,
            0.4611182576179717883E-9,
            -0.3158592997860565771E-10,
            0.2435018039365041128E-11,
            -0.2074331387398347898E-12,
            0.1925787280589917085E-13,
            -0.1927554805838956104E-14,
            0.2062198029197818278E-15,
            -0.2341685117579242403E-16],
        a: -1.0,
        b: 1.0,
    };
    // Minimax rational approximation for [0,1), peak relative error = 1.83*GSL_DBL_EPSILON.
    // Source: http://www.advanpix.com/?p=3987
    pub(super) static ref K1_POLY: Polynomial<f64> = Polynomial {
        coeffs: vec![
            -3.0796575782920622440538935e-01,
            -8.5370719728650778045782736e-02,
            -4.6421827664715603298154971e-03,
            -1.1253607036630425931072996e-04,
            -1.5592887702110907110292728e-06,
            -1.4030163679125934402498239e-08,
            -8.8718998640336832196558868e-11,
            -4.1614323580221539328960335e-13,
            -1.5261293392975541707230366e-15,
        ],
    };

    pub(super) static ref I1_POLY: Polynomial<f64> = Polynomial {
        coeffs: vec![
            8.3333333333333325191635191e-02,
            6.9444444444467956461838830e-03,
            3.4722222211230452695165215e-04,
            1.1574075952009842696580084e-05,
            2.7555870002088181016676934e-07,
            4.9724386164128529514040614e-09,
        ],
    };

    // Chebyshev expansion for [1,8], peak relative error = 1.28*GSL_DBL_EPSILON.
    // Source: Pavel Holoborodko.
    pub(super) static ref AK1_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            2.07996868001418246e-01,
            1.62581565017881476e-01,
            -5.87070423518863640e-03,
            4.95021520115789501e-04,
            -5.78958347598556986e-05,
            8.18614610209334726e-06,
            -1.31604832009487277e-06,
            2.32546031520101213e-07,
            -4.42206518311557987e-08,
            8.92163994883100361e-09,
            -1.89046270526983427e-09,
            4.17568808108504702e-10,
            -9.55912361791375794e-11,
            2.25769353153867758e-11,
            -5.48128000211158482e-12,
            1.36386122546441926e-12,
            -3.46936690565986409e-13,
            9.00354564415705942e-14,
            -2.37950577776254432e-14,
            6.39447503964025336e-15,
            -1.74498363492322044e-15,
            4.82994547989290473e-16,
            -1.35460927805445606e-16,
            3.84604274446777234e-17,
            -1.10456856122581316e-17,
        ],
        a: -1.0,
        b: 1.0,
    };

    // Chebyshev expansion for [8,inf), peak relative error = 1.25*GSL_DBL_EPSILON.
    // Source: SLATEC/dbsk1e.f
    pub(super) static ref AK12_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            0.637930834373900104E-1,
            0.283288781304972094E-1,
            -0.247537067390525035E-3,
            0.577197245160724882E-5,
            -0.206893921953654830E-6,
            0.973998344138180418E-8,
            -0.558533614038062498E-9,
            0.373299663404618524E-10,
            -0.282505196102322545E-11,
            0.237201900248414417E-12,
            -0.217667738799175398E-13,
            0.215791416161603245E-14,
            -0.229019693071826928E-15,
            0.258288572982327496E-16,
        ],
        a: -1.0,
        b: 1.0,
    };

    // based on SLATEC besi0
    // series for bi0        on the interval  0.          to  9.00000d+00
    //                                         with weighted error   2.46e-18
    //                                          log weighted error  17.61
    //                                significant figures required  17.90
    //                                     decimal places required  18.15
    pub(super) static ref BI0_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            -0.07660547252839144951,
            1.92733795399380827000,
            0.22826445869203013390,
            0.01304891466707290428,
            0.00043442709008164874,
            0.00000942265768600193,
            0.00000014340062895106,
            0.00000000161384906966,
            0.00000000001396650044,
            0.00000000000009579451,
            0.00000000000000053339,
            0.00000000000000000245,
        ],
        a: -1.0,
        b: 1.0,
    };

    // based on SLATEC besi0
    // series for ai0        on the interval  1.25000d-01 to  3.33333d-01
    //                                         with weighted error   7.87e-17
    //                                          log weighted error  16.10
    //                                significant figures required  14.69
    //                                     decimal places required  16.76
    pub(super) static ref AI0_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            0.07575994494023796,
            0.00759138081082334,
            0.00041531313389237,
            0.00001070076463439,
            -0.00000790117997921,
            -0.00000078261435014,
            0.00000027838499429,
            0.00000000825247260,
            -0.00000001204463945,
            0.00000000155964859,
            0.00000000022925563,
            -0.00000000011916228,
            0.00000000001757854,
            0.00000000000112822,
            -0.00000000000114684,
            0.00000000000027155,
            -0.00000000000002415,
            -0.00000000000000608,
            0.00000000000000314,
            -0.00000000000000071,
            0.00000000000000007,
        ],
        a: -1.0,
        b: 1.0,
    };

    // based on SLATEC besi0
    // series for ai02       on the interval  0.          to  1.25000d-01
    //                                         with weighted error   3.79e-17
    //                                          log weighted error  16.42
    //                                significant figures required  14.86
    //                                     decimal places required  17.09
    pub(super) static ref AI02_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            0.05449041101410882,
            0.00336911647825569,
            0.00006889758346918,
            0.00000289137052082,
            0.00000020489185893,
            0.00000002266668991,
            0.00000000339623203,
            0.00000000049406022,
            0.00000000001188914,
            -0.00000000003149915,
            -0.00000000001321580,
            -0.00000000000179419,
            0.00000000000071801,
            0.00000000000038529,
            0.00000000000001539,
            -0.00000000000004151,
            -0.00000000000000954,
            0.00000000000000382,
            0.00000000000000176,
            -0.00000000000000034,
            -0.00000000000000027,
            0.00000000000000003,
        ],
        a: -1.0,
        b: 1.0,
    };

    // based on SLATEC besi1(), besi1e()
    // series for bi1        on the interval  0.          to  9.00000d+00
    //                                         with weighted error   2.40e-17
    //                                          log weighted error  16.62
    //                                significant figures required  16.23
    //                                     decimal places required  17.14
    pub(super) static ref BI1_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            -0.001971713261099859,
            0.407348876675464810,
            0.034838994299959456,
            0.001545394556300123,
            0.000041888521098377,
            0.000000764902676483,
            0.000000010042493924,
            0.000000000099322077,
            0.000000000000766380,
            0.000000000000004741,
            0.000000000000000024,
        ],
        a: -1.0,
        b: 1.0,
    };

    // based on SLATEC besi1(), besi1e()
    // series for ai1        on the interval  1.25000d-01 to  3.33333d-01
    //                                         with weighted error   6.98e-17
    //                                          log weighted error  16.16
    //                                significant figures required  14.53
    //                                     decimal places required  16.82
    pub(super) static ref AI1_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            -0.02846744181881479,
            -0.01922953231443221,
            -0.00061151858579437,
            -0.00002069971253350,
            0.00000858561914581,
            0.00000104949824671,
            -0.00000029183389184,
            -0.00000001559378146,
            0.00000001318012367,
            -0.00000000144842341,
            -0.00000000029085122,
            0.00000000012663889,
            -0.00000000001664947,
            -0.00000000000166665,
            0.00000000000124260,
            -0.00000000000027315,
            0.00000000000002023,
            0.00000000000000730,
            -0.00000000000000333,
            0.00000000000000071,
            -0.00000000000000006,
        ],
        a: -1.0,
        b: 1.0,
    };

    // based on SLATEC besi1(), besi1e()
    // series for ai12       on the interval  0.          to  1.25000d-01
    //                                        with weighted error   3.55e-17
    //                                         log weighted error  16.45
    //                               significant figures required  14.69
    //                                    decimal places required  17.12
    pub(super) static ref AI12_CHEB: ChebSeries<f64> = ChebSeries {
        coeffs: vec![
            0.02857623501828014,
            -0.00976109749136147,
            -0.00011058893876263,
            -0.00000388256480887,
            -0.00000025122362377,
            -0.00000002631468847,
            -0.00000000383538039,
            -0.00000000055897433,
            -0.00000000001897495,
            0.00000000003252602,
            0.00000000001412580,
            0.00000000000203564,
            -0.00000000000071985,
            -0.00000000000040836,
            -0.00000000000002101,
            0.00000000000004273,
            0.00000000000001041,
            -0.00000000000000382,
            -0.00000000000000186,
            0.00000000000000033,
            0.00000000000000028,
            -0.00000000000000003,
        ],
        a: -1.0,
        b: 1.0,
    };
}
